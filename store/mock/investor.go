// Code generated by MockGen. DO NOT EDIT.
// Source: investor.go

// Package store is a generated GoMock package.
package store

import (
	context "context"
	reflect "reflect"

	entity "github.com/1991-bishnu/loan-service/db/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockInvestor is a mock of Investor interface.
type MockInvestor struct {
	ctrl     *gomock.Controller
	recorder *MockInvestorMockRecorder
}

// MockInvestorMockRecorder is the mock recorder for MockInvestor.
type MockInvestorMockRecorder struct {
	mock *MockInvestor
}

// NewMockInvestor creates a new mock instance.
func NewMockInvestor(ctrl *gomock.Controller) *MockInvestor {
	mock := &MockInvestor{ctrl: ctrl}
	mock.recorder = &MockInvestorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInvestor) EXPECT() *MockInvestorMockRecorder {
	return m.recorder
}

// GetByID mocks base method.
func (m *MockInvestor) GetByID(ctx context.Context, id string) (*entity.Investor, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", ctx, id)
	ret0, _ := ret[0].(*entity.Investor)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID.
func (mr *MockInvestorMockRecorder) GetByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockInvestor)(nil).GetByID), ctx, id)
}
